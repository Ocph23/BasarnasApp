@layout AdminLayout
@page "/admin/jeniskejadian"

@inject IJenisKejadianService jenisKejadianService
@inject NavigationManager Navigation
@inject IDialogService Dialog

<MudPaper style="margin:20px; padding: 30px;">
    <div style="display: flex;">
        <MudText Typo="Typo.h5" Color="Color.Primary" Class="mb-4">Data Jenis Kejadian</MudText>
        <MudSpacer/>
        <div>
            <MudButton OnClick="Add" Size="Size.Small" Variant="Variant.Filled" Color="Color.Success" StartIcon="@Icons.Material.Filled.Add"  >Tambah</MudButton>
            <MudButton Size="Size.Small" Variant="Variant.Filled" Color="Color.Warning" StartIcon="@Icons.Material.Filled.Print"  >Cetak</MudButton>
        </div>
    </div>  

  <MudDataGrid Items="@datas.Select((x,i)=> new {Data=x, index=i})">
    <Columns>
       <TemplateColumn Title="Nomor" Style="width:40px">
            <CellTemplate>
                @(context.Item.index+1)
            </CellTemplate>
       </TemplateColumn>
        <PropertyColumn Property="x => x.Data.Name" Title="Jenis Kejadian"/>
        <PropertyColumn Property="x => x.Data.Description" Title="Keterangan"/>
        <TemplateColumn Context="item" Style="width:70px">
           <CellTemplate>
             <MudIconButton OnClick="@(()=>Edit(item.Item.Data))" Icon="@Icons.Material.Filled.Edit" Variant="Variant.Filled" Color="Color.Warning"></MudIconButton>
            <MudIconButton OnClick="@(()=>Delete(item.Item.Data))" Icon="@Icons.Material.Filled.Delete" Variant="Variant.Filled" Color="Color.Error"></MudIconButton>
           </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>
</MudPaper>

@code {

    ICollection<JenisKejadianRequest> datas = new List<JenisKejadianRequest>();

    protected override async Task OnInitializedAsync()
    {
        var result  = await jenisKejadianService.GetAsync();
        datas  = result.ToList();
    }

    async Task Add(){
          DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = true };
        var parameters = new DialogParameters<EditJenisKejadianPage> { { x => x.model, new JenisKejadianRequest() } };
        var dlg = await Dialog.Show<EditJenisKejadianPage>("Tambah Jenis Kejadian", parameters, options).Result;
        if(!dlg.Cancelled){
            var result  = await jenisKejadianService.PostAsync(dlg.Data as JenisKejadianRequest);
                datas.Add(result);
            }

    }   

     async Task Edit(JenisKejadianRequest model){
          DialogOptions options = new DialogOptions() { MaxWidth = MaxWidth.Small, FullWidth = true };
        var parameters = new DialogParameters<EditJenisKejadianPage> { { x => x.model, model } };
        var dlg = await Dialog.Show<EditJenisKejadianPage>("Edit Jenis Kejadian", parameters, options).Result;
        if(!dlg.Cancelled)
        {
            var jenisKejadian = dlg.Data as JenisKejadianRequest;
            var result  = await jenisKejadianService.PutAsync(jenisKejadian.Id, jenisKejadian);
            
        }

    }    


    async Task Delete(JenisKejadianRequest model)
    {
        bool? result = await Dialog.ShowMessageBox(
                    "Warning", "Yakin Hapus Data ?", yesText:"Delete!", cancelText:"Cancel");
        if(result is true){
            var deleted = await jenisKejadianService.DeleteAsync(model.Id);
            if(deleted){
                datas.Remove(model);
            }            
        }
    }    
}
